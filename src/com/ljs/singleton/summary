
单例模式的写法分三步:
1、构造函数私有化
2、在类的内部创建实例
3、提供获取唯一实例的方法
总的来说单例模式的写法有五种:
1、饿汉式
    1.1在第二步直接实例化
        private static Singleton single = new Singleton(); 如果不用内存浪费。
2、简单懒汉式(在方法加锁)
    2.1在第二步先赋值为null，在第三步判断single是否为空，为空single = new Singleton()
        不同步
    2.2给第三步方法加上锁(synchronized),性能低下
3、dcl双重检测加锁(进阶懒汉式)
    3.1将锁范围缩小，在第三步方法里写代码块锁里写实例化，可能创建出两个对象
    3.2在锁代码块之前在判断，双重检测，有重排序问题
    3.3在第二步变量前加上volatile，volatile有内存屏障的功能
4、静态内部类实现懒汉式(最推荐写法)
    4.1构造器私有化
    4.2静态内部类，内部类有一个私有静态常数的外部类对象并且实例化
    4.3一个公有静态不可被子类重写的返回外部类实例的方法
        里面返回内部类静态常量
5、枚举方式(最安全，简洁写法)
    5.1只需要写Singleton8,就行